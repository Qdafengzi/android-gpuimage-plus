apply plugin: 'com.android.library'
apply plugin: 'org.jetbrains.kotlin.android'

def usingCMakeCompile() {
    /// define  gradle.ext.usingCMakeCompile = false to disable CMakeCompile Mode.
    return gradle.ext != null && gradle.ext.has("usingCMakeCompile") && gradle.ext.usingCMakeCompile;
}

def usingCMakeCompileDebug() {
    /// define  gradle.ext.usingCMakeCompileDebug = true to enable CMake Debug Mode.
    return gradle.ext != null && gradle.ext.has("usingCMakeCompileDebug") && gradle.ext.usingCMakeCompileDebug;
}

def disableVideoModule() {
    return gradle.ext != null && gradle.ext.has("disableVideoModule") && gradle.ext.disableVideoModule;
}

def deployArtifacts() {
    return gradle.ext != null && gradle.ext.has("deployArtifacts") && gradle.ext.deployArtifacts;
}

android {
    compileSdk 35
    if (usingCMakeCompile()) {
        ndkVersion rootProject.ext.android.ndkVersion
    }

    defaultConfig {
        minSdkVersion 24
        targetSdkVersion 35

        buildConfigField("boolean", "CGE_USE_VIDEO_MODULE", disableVideoModule() ? "false" : "true")

        if (usingCMakeCompile()) {
            externalNativeBuild {
                cmake {

                    def cmakeBuildType = "";
                    def cppExtraFlags = "";
                    def cgeVideoModuleDef = "";

                    if (usingCMakeCompileDebug()) {
                        cmakeBuildType = "-DCMAKE_BUILD_TYPE=Debug"
                        cppExtraFlags = "-DDEBUG=1 -D_DEBUG=1 -Od -g"
                    } else {
                        cmakeBuildType = "-DCMAKE_BUILD_TYPE=Release"
                        cppExtraFlags = "-Os -DNDEBUG=1 -D_NDEBUG=1"
                    }

                    if (disableVideoModule()) {
                        cgeVideoModuleDef = "-DCGE_USE_VIDEO_MODULE=OFF"
                    } else {
                        cgeVideoModuleDef = "-DCGE_USE_VIDEO_MODULE=ON"
                    }

                    arguments "-DANDROID_STL=c++_static",
                            "-DANDROID_ARM_NEON=TRUE",
                            "-DANDROID_GRADLE=ON",
                            cmakeBuildType,
                            cgeVideoModuleDef

                    cFlags "-ffast-math -fPIE -fPIC -DNO_LOCALE_SUPPORT=1 -DANDROID_NDK=1 -D__STDC_CONSTANT_MACROS=1 ${cppExtraFlags}"
                    cppFlags "-ffast-math -fPIE -fPIC -DNO_LOCALE_SUPPORT=1 -DANDROID_NDK=1 -D__STDC_CONSTANT_MACROS=1 -frtti -std=c++14 -fno-exceptions -fvisibility-inlines-hidden ${cppExtraFlags}"

                    println("cmake arguments: " + arguments)
                    println("cppFlags: " + cppFlags)
                }
            }

            ndk {
                abiFilters 'arm64-v8a'
                // if (!usingCMakeCompileDebug()) {
                //     debugSymbolLevel ''
                // }
            }
        }
    }

    if (usingCMakeCompile()) {
        externalNativeBuild {
            cmake {
                path 'src/main/jni/CMakeLists.txt'
                version rootProject.ext.android.cmakeVersion
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    ////////////////////////////////////////

    sourceSets.main {
        if (!usingCMakeCompile()) {
            jniLibs.srcDir 'src/main/libs' //set libs as .so's location instead of jni
            jni.srcDirs = [] //disable automatic ndk-build call with auto-generated Android.mk file
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    namespace = 'org.wysaid.library'
    buildFeatures {
        buildConfig true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:' + rootProject.ext.android.appcompatX
}

